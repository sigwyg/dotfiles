[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'
on_source = ['vimfiler.vim']

[[plugins]]
repo = 'Shougo/neosnippet'
depends = ['neosnippet-snippets', 'context_filetype.vim']
on_event = 'InsertCharPre'
on_ft = 'snippet'
on_i = 1
hook_source = '''
    let g:neosnippet#snippets_directory='~/.vim/snippets'
    let g:neosnippet#enable_snipmate_compatibility = 1
    let g:neosnippet#enable_completed_snippet = 1
    let g:neosnippet#expand_word_boundary = 1
    " Plugin key-mappings.
    imap <C-k>  <Plug>(neosnippet_expand_or_jump)
    smap <C-k>  <Plug>(neosnippet_expand_or_jump)
    xmap <C-k>  <Plug>(neosnippet_expand_target)

    " For conceal markers.
    if has('conceal')
        set conceallevel=2 concealcursor=niv
    endif
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = 'context_filetype.vim'
on_i = 1
hook_source = '''
    let g:deoplete#enable_at_startup = 1
    inoremap <expr><tab> pumvisible() ? "\<C-n>" :
        \ neosnippet#expandable_or_jumpable() ?
        \    "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
'''

[[plugins]]
repo = 'Shougo/denite.nvim'
on_add = 'Denite'
hook_add = '''
    nnoremap <silent> <C-i>f :<C-u>Denite file/rec<CR>
    nnoremap <silent> <C-i>b :<C-u>Denite buffer<CR>
    nnoremap <silent> <C-i>l :<C-u>Denite line<CR>
    nnoremap <silent> <C-i>r :<C-u>Denite -resume<CR>
    nnoremap <silent> <C-i>, :<C-u>DeniteCursorWord grep<CR>

    " denite/insert モードのときは，C- で移動できるようにする
    call denite#custom#map('insert', "<C-n>", '<denite:move_to_next_line>', 'noremap')
    call denite#custom#map('insert', "<C-p>", '<denite:move_to_previous_line>', 'noremap')
    call denite#custom#map('normal', "<C-n>", '<denite:move_to_next_line>', 'noremap')
    call denite#custom#map('normal', "<C-p>", '<denite:move_to_previous_line>', 'noremap')

    " split
    call denite#custom#map('insert', '<C-s>', '<denite:do_action:split>')
    " vsplit
    call denite#custom#map('insert', '<C-v>', '<denite:do_action:vsplit>')

    " jj で denite/insert を抜けるようにする
    call denite#custom#map('insert', 'jj', '<denite:enter_mode:normal>')

    " For ripgrep
    if executable('rg')
        call denite#custom#var('file_rec', 'command', ['rg', '--files', '--glob', '!{.git,node_modules,vendor}/**', ''])

        " Ripgrep command on grep source
        call denite#custom#var('grep', 'command', ['rg'])
        call denite#custom#var('grep', 'default_opts', ['--vimgrep', '--no-heading'])
        call denite#custom#var('grep', 'recursive_opts', [])
        call denite#custom#var('grep', 'pattern_opt', ['--regexp'])
        call denite#custom#var('grep', 'separator', ['--'])
        call denite#custom#var('grep', 'final_opts', [])
    endif

    " customize ignore globs
    call denite#custom#filter('matcher/ignore_globs', 'ignore_globs',
      \ [ '.git/', 'node_modules/', '__pycache__/',
      \   'venv/', 'images/', '*.min.*', 'img/', 'fonts/', 'font/'])

    " Change default prompt
    call denite#custom#option('default', 'prompt', '>')
'''

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'editorconfig/editorconfig-vim'
on_path = '.*'
